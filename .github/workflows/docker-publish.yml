name: Build and Publish Docker Image

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_SECRET }}

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Extract version from Docker Hub
        id: get_version
        run: |
          IMAGE_NAME=leddzip/pytorch-generic-model
          TOKEN=$(echo -n "${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_SECRET }}" | base64)
          CURRENT_VERSION=$(curl -s -H "Authorization: Basic $TOKEN" "https://hub.docker.com/v2/repositories/$IMAGE_NAME/tags/latest" | jq -r '.name')
          if [[ "$CURRENT_VERSION" == "null" ]]; then
            CURRENT_VERSION="0.0.0"
          fi
          echo "Current version: $CURRENT_VERSION"
          IFS='.' read -r -a VERSION_PARTS <<< "$CURRENT_VERSION"
          VERSION_PARTS[1]=$((VERSION_PARTS[1] + 1))
          NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.${VERSION_PARTS[2]}"
          echo "New version: $NEW_VERSION"
          echo "::set-output name=version::$NEW_VERSION"

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            leddzip/pytorch-generic-model:latest
            leddzip/pytorch-generic-model:${{ steps.get_version.outputs.version }}